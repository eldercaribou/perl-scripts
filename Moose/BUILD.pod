
=pod

=head1 NAME

Moose::Cookbook::Snack::BUILD - Overriding the I<new()> method to customize
the behaivor of Moose object creation

=head1 SYNOPSIS

    package BUILDDemo;
    use Moose; 

    has 'example_file' => ( is => 'rw', required => 1);

    sub BUILD {
        my $self;
        # see if 'example_file' exists; 
        # create the object only if the file does exist
        if ( -e $self->example_file ) {
            return $self;
        } else {
            die('ERROR: ' . $self->example_file . 'does not exist');
        } 
    } # sub BUILD 

    package main;
    use Moose; # needed for the call to 'blessed' below
    
    # '$0' is the name of this script, set automatically by Perl
    my $demo = BUILDDemo->new( example_file => $0 );

    print qq(My name is ) . $demo->example_file . qq(\n);
    print qq(I am a ) . $demo->meta->name . qq( type of object\n);

=head1 DESCRIPTION

The C<BUILD()> method allows you to write your own custom constructors for
your Moose objects. 

=head2 Why would you want a custom constructor?
By convention, most objects in Perl are created by calling a C<new()> method
using the name of the class:

    my $object = SomeClass->new();

Moose is no different in this respect.  However, since Moose handles the
C<new()> method for you, how do you change the default behaivor of the
C<new()> method in Moose?  This is what the C<BUILD()> method was designed
for.

=head1 SEE ALSO

=over 4

=item L<Moose::Cookbook::FAQ> - Frequently asked questions about Moose (How do
I write custom constructors with Moose?)

=item L<Moose::Cookbook::Recipe4> - Subtypes, and modeling a simple Company
class heirarchy (Example usage of BUILD in action)

=item L<Moose::Cookbook::WTF> - For when things go wrong with Moose ('Roles'
Ñ•ection describes BUILD/BUILDALL)

=item L<Moose::Object> - The base object for Moose (BUILDALL) 

The L<Moose::Cookbook::WTF> section entitled B<Roles> for more info about how
the BUILD/BUILDALL methods work.

=back

=head1 AUTHOR

Brian Manning <elspicyjack at gmail dot com>

=head1 COPYRIGHT AND LICENSE

Copyright (c)2008 by Brian Manning

This documentation is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
